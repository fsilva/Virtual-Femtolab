#!/usr/bin/env python
# -*- coding: us-ascii -*-
# generated by wxGlade 0.6.3 on Sun Aug  2 14:05:43 2009

import wx

# begin wxGlade: extracode
# end wxGlade



class EditComputationalWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        self.label_11 = wx.StaticText(self, -1, "Num. Points")
        self.spin_ctrl_1 = wx.SpinCtrl(self, -1, "128", min=0, max=100000)
        #self.label_12 = wx.StaticText(self, -1, "")
        
        self.label_21 = wx.StaticText(self, -1, "Temporal Width (fs)")
        self.spin_ctrl_2 = wx.SpinCtrl(self, -1, "128", min=0, max=100000)
         
        self.label_31 = wx.StaticText(self, -1, "Spectral Resolution\n@ central frequency)")
        self.label_32 = wx.StaticText(self, -1, " nm")
        
        self.button_2 = wx.Button(self, -1, "Refresh")
        self.button_1 = wx.Button(self, -1, "Done")

        self.__set_properties()
        self.__do_layout()
        
        #TODO: update spectral resolution with spinctrl event
        self.spin_ctrl_1.Bind(wx.EVT_SPINCTRL, self.change_spin)
        self.spin_ctrl_2.Bind(wx.EVT_SPINCTRL, self.change_spin)
        self.Bind(wx.EVT_BUTTON,   self.refresh_click, self.button_2)
        self.Bind(wx.EVT_BUTTON,   self.done_click, self.button_1)
        # end wxGlade

    def __set_properties(self):
        self.SetTitle("Computational Window")
        self.spin_ctrl_1.SetMinSize((128, 30))
        self.spin_ctrl_2.SetMinSize((128, 30))
        
        # end wxGlade

    def __do_layout(self):
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        
        grid_sizer_1 = wx.FlexGridSizer(4, 2, 0, 0)

        grid_sizer_1.Add(self.label_11, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 5)
        grid_sizer_1.Add(self.spin_ctrl_1, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 5)
        
        grid_sizer_1.Add(self.label_21, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 5)
        grid_sizer_1.Add(self.spin_ctrl_2, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 5)
        
        grid_sizer_1.Add(self.label_31, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 5)
        grid_sizer_1.Add(self.label_32, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 5)
        
        grid_sizer_1.Add(self.button_2, 0, wx.ALL, 10)
        grid_sizer_1.Add(self.button_1, 0, wx.ALL, 10)

        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade
        
    def set_info(self,num_points,temporal_width,freqZero,change_function,refresh_function):
        self.change_function = change_function
        self.refresh_function = refresh_function
        
        self.freqZero = freqZero
        
        self.spin_ctrl_1.SetValue(num_points)
        self.spin_ctrl_2.SetValue(temporal_width*1e15)
        
        self.change_spin(None)

        
    def change_spin(self,event):
        num_points = int(self.spin_ctrl_1.GetValue())
        temporal_width = float(self.spin_ctrl_2.GetValue())*1e-15
        
        spectral_resolution = 3e8/self.freqZero**2/temporal_width
        self.label_32.SetLabel('%5.2f nm'%(spectral_resolution*1e9))
        
        #spectral_resolution = 1/temporal_width
        #self.label_32.SetLabel('%5.2e Hz'%(spectral_resolution))
        
        if(not event is None):
            event.Skip()

    def refresh_click(self, event): # wxGlade: EditThinLens.<event_handler>
        num_points = int(self.spin_ctrl_1.GetValue())
        temporal_width = float(self.spin_ctrl_2.GetValue())*1e-15
        
        self.change_function(num_points,temporal_width)
        self.change_spin(None)
        self.refresh_function()
        
        if(not event is None):
            event.Skip()

    def done_click(self, event): # wxGlade: EditThinLens.<event_handler>
        self.refresh_click(None)
        self.Close()
        event.Skip()

# end of class EditThinLens


