#!/usr/bin/env python
# -*- coding: us-ascii -*-
# generated by wxGlade 0.6.3 on Sun Aug  2 14:05:43 2009

import wx

# begin wxGlade: extracode
# end wxGlade



class EditThinLens(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: EditThinLens.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Focus =")
        self.spin_ctrl_1 = wx.SpinCtrl(self, -1, "10", min=0, max=100000)
        self.label_2 = wx.StaticText(self, -1, "mm")
        self.button_2 = wx.Button(self, -1, "Refresh")
        self.button_1 = wx.Button(self, -1, "Done")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.refresh_click, self.button_2)
        self.Bind(wx.EVT_BUTTON, self.done_click, self.button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: EditThinLens.__set_properties
        self.SetTitle("Thin Lens Properties")
        self.spin_ctrl_1.SetMinSize((128, 30))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: EditThinLens.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5.Add(self.label_1, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_5.Add(self.spin_ctrl_1, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_5.Add(self.label_2, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizer_5, 1, wx.EXPAND, 0)
        sizer_4.Add(self.button_2, 0, wx.ALL|wx.ALIGN_RIGHT, 10)
        sizer_4.Add(self.button_1, 0, wx.ALL|wx.ALIGN_RIGHT, 10)
        sizer_2.Add(sizer_4, 1, wx.EXPAND|wx.ALIGN_RIGHT, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade
        
    def set_info(self,element,refresh_function):
        self.element = element
        self.refresh_function = refresh_function
        
        self.spin_ctrl_1.SetValue(element.f*1000)

    def refresh_click(self, event): # wxGlade: EditThinLens.<event_handler>
        value = float(self.spin_ctrl_1.GetValue())*0.001
        self.element.f = value
        self.refresh_function()
        if(not event is None):
            event.Skip()

    def done_click(self, event): # wxGlade: EditThinLens.<event_handler>
        self.refresh_click(None)
        self.Close()
        event.Skip()

# end of class EditThinLens


